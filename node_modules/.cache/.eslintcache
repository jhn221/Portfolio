[{"/Users/taehokim/Desktop/hanna/이력서/jhn221.github.io-resume/src/index.tsx":"1","/Users/taehokim/Desktop/hanna/이력서/jhn221.github.io-resume/src/reportWebVitals.ts":"2","/Users/taehokim/Desktop/hanna/이력서/jhn221.github.io-resume/src/App.tsx":"3","/Users/taehokim/Desktop/hanna/이력서/jhn221.github.io-resume/src/Main.tsx":"4","/Users/taehokim/Desktop/hanna/이력서/jhn221.github.io-resume/src/component/Footer.tsx":"5","/Users/taehokim/Desktop/hanna/project/Portfolio/src/index.tsx":"6","/Users/taehokim/Desktop/hanna/project/Portfolio/src/reportWebVitals.ts":"7","/Users/taehokim/Desktop/hanna/project/Portfolio/src/App.tsx":"8","/Users/taehokim/Desktop/hanna/project/Portfolio/src/Main.tsx":"9","/Users/taehokim/Desktop/hanna/project/Portfolio/src/component/Footer.tsx":"10","/Users/taehokim/Desktop/hanna/project/Portfolio/src/component/Header.tsx":"11","/Users/taehokim/Desktop/hanna/project/Portfolio/src/Image.jsx":"12","/Users/taehokim/Desktop/hanna/project/Portfolio/src/component/Modal.jsx":"13","/Users/taehokim/Desktop/hanna/project/Portfolio/src/page/Sayo/Sayo.tsx":"14","/Users/taehokim/Desktop/hanna/project/Portfolio/src/page/movie/Movie.tsx":"15","/Users/taehokim/Desktop/hanna/project/Portfolio/src/page/clone/Clone.tsx":"16"},{"size":319,"mtime":1678114864408,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1678114864408,"results":"19","hashOfConfig":"18"},{"size":295,"mtime":1678704557123,"results":"20","hashOfConfig":"18"},{"size":11633,"mtime":1679486018209,"results":"21","hashOfConfig":"18"},{"size":279,"mtime":1679402883550,"results":"22","hashOfConfig":"18"},{"size":440,"mtime":1682167896368,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1678114864408,"results":"25","hashOfConfig":"24"},{"size":1117,"mtime":1682083458209,"results":"26","hashOfConfig":"24"},{"size":11978,"mtime":1684829778239,"results":"27","hashOfConfig":"24"},{"size":260,"mtime":1684829922529,"results":"28","hashOfConfig":"24"},{"size":1156,"mtime":1683636552927,"results":"29","hashOfConfig":"24"},{"size":966,"mtime":1680224470154,"results":"30","hashOfConfig":"24"},{"size":1304,"mtime":1680182603758,"results":"31","hashOfConfig":"24"},{"size":3642,"mtime":1683175308780,"results":"32","hashOfConfig":"24"},{"size":4811,"mtime":1683177448227,"results":"33","hashOfConfig":"24"},{"size":3463,"mtime":1683180440258,"results":"34","hashOfConfig":"24"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lghi9r",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kiu9mv",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},"/Users/taehokim/Desktop/hanna/이력서/jhn221.github.io-resume/src/index.tsx",[],[],"/Users/taehokim/Desktop/hanna/이력서/jhn221.github.io-resume/src/reportWebVitals.ts",[],[],"/Users/taehokim/Desktop/hanna/이력서/jhn221.github.io-resume/src/App.tsx",[],[],"/Users/taehokim/Desktop/hanna/이력서/jhn221.github.io-resume/src/Main.tsx",["89","90"],[],"/Users/taehokim/Desktop/hanna/이력서/jhn221.github.io-resume/src/component/Footer.tsx",[],[],"/Users/taehokim/Desktop/hanna/project/Portfolio/src/index.tsx",[],[],"/Users/taehokim/Desktop/hanna/project/Portfolio/src/reportWebVitals.ts",[],[],[],"/Users/taehokim/Desktop/hanna/project/Portfolio/src/App.tsx",["91","92"],[],"import React, { useRef } from 'react';\nimport './App.css';\nimport Footer from './component/Footer';\nimport Header from './component/Header';\nimport Main from './Main';\nimport Sayo from './page/Sayo/Sayo';\nimport Movie from './page/movie/Movie';\nimport Clone from './page/clone/Clone';\nimport { BrowserRouter, Route, Routes, useLocation } from 'react-router-dom';\n\nfunction App() {\n  const contactRef = useRef<HTMLDivElement>(null);\n  const location = useLocation();\n\n  const onContactClick = () => {\n    contactRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <BrowserRouter basename={process.env.PUBLIC_URL}></BrowserRouter> */}\n      <header className=\"App-header\">\n        {['/'].includes(location.pathname) && <Header/>}\n          <Routes>\n            <Route path='/' element={<Main ref={contactRef}/>}/>\n            <Route path='/sayo' element={<Sayo/>}/>\n            <Route path='/movie' element={<Movie/>}/>\n            <Route path='/clone' element={<Clone/>}/>\n          </Routes>\n      </header>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/taehokim/Desktop/hanna/project/Portfolio/src/Main.tsx",["93"],[],"import { forwardRef, useRef, useState } from 'react';\nimport '../src/component/Style.scss';\nimport { BsShift } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\n\n\nconst Main = forwardRef<any>((props, ref) => {\n\n    const intro = useRef<HTMLDivElement>(null)\n\n    const clickup = () => intro.current?.scrollIntoView({ behavior: 'smooth' });\n\n    return (\n        // <div className='home'>\n        <div className='main' ref={ref}>\n            <div className='intro' ref={intro}>\n                <h3>about me</h3>\n                <div className='aboutMe'>\n                    <h5>함께 일하고 싶은 개발자가 되자<br/><br/></h5>\n                    <span className='introduce'>평소 구현되어 있는 사이트를 들어가보면서 바꾸고 싶은 부분이나 수정하고 싶은 부분들이 있는 웹 사이트가 있었습니다.<br/>\n                    먼저 눈으로 보이는 부분을 그려보고 싶다는 생각이 들어 먼저 JavaScript 인터넷 강의를 수강했습니다.<br/>\n                    또한 기존 인터넷 강의를 보며 구현한 기능에서 더 나아가 새로운 기능을 넣어보는 스터디를 진행했습니다.<br/>\n                    하지만 독학에서는 협업을 경험하기 힘들었고, 페어 활동 및 프로젝트에서 협업을 경험할 수 있는 부트캠프 프론트엔드 과정을 이수했습니다.<br/><br/>\n                    6개월간의 학습과 2건의 프로젝트를 진행 후 수료를 했지만 마지막으로 프로젝트를 하면서 느낀 수 많은 type error와 run time 에러 등으로 javascript에 한계를 경험했습니다.\n                    <br/> 뭘봐유 프로젝트를 함께 했던 팀원들과 다시 한번 프로젝트를 하기로 결정했고, typescript를 이용한 프로젝트를 진행하고 있으며 부족한 이론을 채우기 위해 유튜브 등 인터넷 강의를 병행하며 학습하고 있습니다.<br/>\n                    지금까지의 경험과 이를 통해 얻은 지식을 발판으로 함께 일하고 싶은 개발자가 되자는 목표를 가지고 발전하기 위해 노력하겠습니다.<br/>\n                   </span>\n                </div>\n                {/* <div className='aboutMe'>\n                    <h5>함께 일하고 싶은 개발자가 되자<br/><br/></h5>\n                    <span className='introduce'>6개월동안의 부트캠프 기간동안 수 많은 페어활동을 통해서 가장 크게 느꼈던 점은 함께하는 동료의 힘이였습니다.<br/><br/>\n                    동료와 함께 못 푸는 문제를 해결하고 서로 모르는 것을 알려주는 시간이 제가 가장 크게 발전하는 시간이였다는 생각이 들었습니다.<br/>\n                    하나의 과제에서도 다양한 문제 해결 방법을 알 수 있었고 많은 의사소통으로 상대방에게 내 코드, 내 의견을 전달하는 법을 익힐 수 있는 시간이였습니다.<br/>\n                    파트너에게 내 코드를 논리적으로 설명하는 동안 머릿속으로 혼자 정리가 됐던 경험으로 논리적으로 말하는 것의 중요성도 깨달을 수 있었습니다.<br/><br/>\n                    3개의 프로젝트를 진행하며 커뮤니케이션과 논리적으로 말하는 법과 타 팀원들에게 나의 의견을 전달하는 법을 발전시켰습니다.<br/>\n                    이러한 저의 역량으로 함께 일하고 싶은 개발자가 되어 좋은 결과물을 내기 위해 동료들과 시너지 효과를 내고 싶습니다.</span>\n                </div> */}\n            </div>\n            <h3>stack</h3>\n                <div className='stackImg'>\n                    \n                    <div>\n                        <img src={require('./img/git.png')} alt='git'/>\n                        <img src={require('./img/aws.png')} alt='aws'/>\n                    </div>\n                    <div>\n                        <img src={require('./img/react.png')} alt='react'/>\n\n                    </div>\n                    <div>\n                        <img src={require('./img/HTML&CSS.png')} alt='react'/>\n                        <img src={require('./img/javascript.png')} alt='react'/>\n                        <img src={require('./img/typescript.png')} alt='react'/>\n                    </div>\n                    <div>\n                        <img src={require('./img/styledComponent.png')} alt='react'/>\n                        <img src={require('./img/sass.png')} alt='react'/>\n                    </div>\n                    <div>\n                        <img src={require('./img/reactQuery.png')} alt='react'/>\n                        <img src={require('./img/recoil.png')} alt='react'/>\n                        <img src={require('./img/redux.jpeg')} alt='react'/>\n                    </div>\n                </div>\n            <h3>project</h3>\n           \n            <div className='Project'>\n                <div className='ProjectSummary'>\n                    <h2>SAYO</h2>\n                    <div>2023.02.21 ~ 현재</div>\n                    배포링크 : \n                    <a href='http://sayo.s3-website.ap-northeast-2.amazonaws.com//'>'sayo'</a>\n                    \n                </div>\n                <div className='ProjectDetail'>\n                    <div className='aboutProject'>1인 가구가 늘어나는 현재, 이웃들과 대량의 제품을 공동구매 할 수 있도록 지도를 기반으로 제품을 검색하고 구매할 수 있도록 제작하게 된 사이트입니다.</div><br/><span>test ID :test@gmail.com</span>\n                    <br/><span>test PW :asdf1234!!</span><br/><br/>\n                    <div>참여인원 : <span>백엔드 3명 프론트엔드 2명 중 FrontEnd로 참여 (팀원)</span></div>\n                    <div>사용 언어 및 프레임워크 : <span>typescript, HTML, Styled-Component, react, react-query, axios, router-dom</span></div>\n                    {/* <ul>\n                        <li>이용자의 위치 근처에서 구매할 수 있는 공동구매 제품을 확인하고 구매할 수 있는 사이트입니다.</li>\n                        <li>타입스크립트를 사용하였으며 상태관리는 recoil을 이용하였습니다.</li>\n                        <li>소셜로그인(카카오, 네이버, 구글)을 이용한 로그인을 구현하였습니다.</li>\n                        <li>AWS S3를 이용해 배포되었습니다.</li>\n                        <li>반응형 웹 페이지로 구현했습니다. </li><br/>\n                    </ul> */}\n                        <Link to='/sayo'>sayo 프로젝트 세부 정보 더보기</Link>\n                    <div className='ProjectPic'>\n                        {/* <Image/> */}\n                    </div>\n                </div>\n            </div>\n            <div className='Project'>\n                <div className='ProjectSummary'>\n                        <h2>뭘봐유</h2>\n                    <div>2023.01.02 ~ 2023.02.03</div>\n                    회고 :<a href='https://jhn221.tistory.com/84'> 뭘봐유 프로젝트 회고</a>\n                </div>\n                <div className='ProjectDetail'>\n                    <div className='aboutProject'>OTT는 많고 볼 수 있는 작품도 많지만 항상 영화 고르는데만 시간을 쏟다 지쳐 결국 영화를 보지 못 한 경험에서 불편함을 느껴 제작하게 된 사이트 입니다.</div><br/>\n                    <div>참여인원 : <span>백엔드 3명 프론트엔드 3명 중 FrontEnd로 참여 (팀원)</span></div>\n                    <div>사용 언어 및 프레임워크 : <span>javascript, HTML, Styled-Component, react, react-query, axios, router-dom</span></div>\n                    {/* <ul>\n                        <li>크롤링을 이용한 데이터를 받아와 OTT별 (왓챠, 티빙, 웨이브) 영화 순위를 확인할 수 있는 사이트입니다.</li>\n                        <li>javascript를 사용하였으며 redux로 관리하던 상태를 react-query로 리펙토링 했습니다.</li>\n                        <li>useRef를 이용한 무한 스크롤을 구현했습니다.</li>\n                        <li>AWS S3를 이용해 배포되었습니다.</li>\n                        <li>1280px(웹 사이즈) 350px(모바일 사이즈) 적응형 웹 페이지로 구현했습니다.</li>\n                    </ul> */}\n                    <br/>\n                    <Link to='/Movie'>\n                        뭘봐유 프로젝트 세부 정보 더보기\n                    </Link>\n                    <div className='ProjectPic'>\n                        {/* <Image2/> */}\n                    </div>\n                </div>                \n               \n            </div>\n            <div className='Project'>\n                <div className='ProjectSummary'>\n                    <h2>cloneoverflow </h2>\n                    <div>2022.12.20 ~ 2022.12.31</div>\n                    회고 : <a href='https://jhn221.tistory.com/81'> stackover flow 회고</a>\n                    {/* TODO:눌렀을 때 화면 커지도록 구현하기 */}\n                    {/* <img src = '/assets/pre-project.gif' style={{\"width\":\"50px\",\"height\":\"50px\"}}/> */}\n                </div>\n                <div className='ProjectDetail'> \n                    <div className='aboutProject'>stackover flow를 클론코딩하여 질문 및 답변을 작성하고,평가할 수 있는 사이트입니다.</div><br/>\n                    <div>참여인원 : <span>백엔드 3명 프론트엔드 3명 중 FrontEnd로 참여 (팀장)</span></div>\n                    <div>사용 언어 및 프레임워크 : <span>javascript, HTML, Styled-Component, react, redux, axios, router-dom, react-pagenation</span></div>\n                    <Link to='/clone'>cloneoverflow 프로젝트 세부정보 더보기</Link>\n\n                </div>\n            </div>\n            <div className='Project'>    \n                <div className='ProjectSummary'>\n                    <h2>포트폴리오</h2>\n                    <div>2023.03.06 ~ 현재</div>\n                    배포링크 : \n                    <a href='https://jhn221.github.io/hanna_Portfolio/'>'hanna_Portfolio'</a>\n                </div>\n                <div className='ProjectDetail'>\n                    <div className='aboutProject'>포트폴리오 소개를 위한 간단한 홈페이지 입니다.</div><br/>\n                    <div>참여인원 : <span> 1명</span></div>\n                    <div>사용 언어 및 프레임워크 : <span>typescript, HTML, SCSS, react</span></div>\n                    {/* <ul>\n                        <li>더미데이터를 이용해 제작되었습니다.</li>\n                        <li>git page를 이용해 배포되었습니다.</li>\n                        <li>반응형 웹 페이지로 구현했습니다. </li>\n                    </ul> */}\n                </div>\n            </div>\n            <div className='content'>\n                <h3>content</h3>\n                <div className='Logos'>\n                    <div className='Logo'>email : ewal4291@gmail.com</div>\n                    <a href='https://github.com/jhn221' className='Logo'>git : https://github.com/jhn221</a>\n                    <a href='https://jhn221.tistory.com' className='Logo'>블로그 : https://jhn221.tistory.com</a>\n                \n                    {/* <a href='https://jhn221.tistory.com/81' className='Logo'>git : <img src = '/assets/github.png' style={{\"width\":\"50px\",\"height\":\"50px\"}}/></a>\n                    <a href='https://jhn221.tistory.com/81' className='Logo'>블로그 : <img src = '/assets/tstoryBlack.png' style={{\"width\":\"35px\",\"height\":\"35px\"}}/></a> */}\n                </div>\n            </div>\n            <div className='Up'>\n                <BsShift className='UpIcon' onClick={clickup}/>\n            </div>\n        </div>\n        // </div>\n    )\n})\n\nexport default Main; ","/Users/taehokim/Desktop/hanna/project/Portfolio/src/component/Footer.tsx",[],[],"/Users/taehokim/Desktop/hanna/project/Portfolio/src/component/Header.tsx",[],[],"/Users/taehokim/Desktop/hanna/project/Portfolio/src/Image.jsx",[],[],[],"/Users/taehokim/Desktop/hanna/project/Portfolio/src/component/Modal.jsx",["94"],[],"import { Component } from 'react';\n\nclass Modal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            index: this.props.index\n        };\n    }\n\n    imageChange = (index) => {\n        this.setState({\n            index: index\n        });\n    }\n\n    render() {\n        const thumbnails = this.props.images.map((image, index) =>\n            <img onClick={() => this.imageChange(index)} src={image} alt=\"alt\" />\n        );\n        const currentImage = this.props.images[this.state.index];\n        const length = this.props.images.length;\n\n        return (\n            <div className=\"background\" onClick={() => this.props.close(null)}>\n                <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n                    <div className=\"viewer\">\n                        <span onClick={() => this.imageChange((this.state.index + length - 1) % length)}>이전</span>\n                        <img src={currentImage} />\n                        <span onClick={() => this.imageChange((this.state.index + 1) % length)}>다음</span>\n                    </div>\n                    <div className=\"thumbnails\">\n                        {thumbnails}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Modal;","/Users/taehokim/Desktop/hanna/project/Portfolio/src/page/Sayo/Sayo.tsx",[],[],"/Users/taehokim/Desktop/hanna/project/Portfolio/src/page/movie/Movie.tsx",[],[],"/Users/taehokim/Desktop/hanna/project/Portfolio/src/page/clone/Clone.tsx",["95","96","97","98","99"],[],"import '../style.scss'\nimport {BiArrowBack} from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\n\nconst Clone = () => {\n        return(\n            <div className='Sayo'>\n                <div className='DetailTitle'>\n                    <Link to='/'>\n                        <BiArrowBack/>\n                    </Link>\n                    <h2>clone</h2><br/>\n                    <h5>구현 page : home, detail</h5>\n                    <h5>기여도 : 30% </h5>\n                </div>\n                <div className='desktopImg'>\n                    <h4>데스크탑 화면</h4>\n                    <div className='Pro1Pic1'>\n                        <img src='assets/pro01_main.png'/>\n                        <span className='pageName'>Main</span>\n                        <span>\n                            clone 프로젝트의 main page로 전체 질문 list를 확인할 수 있으며, 작성자, 제목, 내용 중 일부를 확인할 수 있도록 구성했습니다.\n                            <br/><br/>header의 검색기능을 통해 질문을 검색할 수 있습니다\n                        </span>\n                    </div>\n                    <div className='Pro1Pic2'>\n                        <img src='assets/pro01_detail.png'/>\n                        <span>\n                           각 질문을 누르면 질문의 내용을 확인할 수 있습니다.<br/><br/>\n                            질문의 내용 뿐 아니라 좋아요/싫어요 갯수,작성자 정보, 질문 시간등을 확인할 수 있습니다.<br/><br/>\n                            해당 질문에 대해 답글을 달 수 있으며 답글은 하단에서 확인 가능합니다.<br/><br/>\n                            답글 또한 좋아요/싫어요 평가가 가능하며 작성자 본인에 한해 수정/삭제가 가능합니다 \n                        </span>\n                        <span className='pageName'>Detail</span>\n                    </div>\n                    <div className='Pro1Pic1'>\n                    <img src='assets/pro01_members.png'></img>\n                        <span className='pageName'>user List</span>\n                        <span>회원가입한 user의 정보를 확인할 수 있는 페이지 입니다<br/><br/>\n                        닉네임을 가지고 user 검색이 가능합니다.<br/><br/>\n                        각 유저가 작성한 post의 갯수도 확인 가능합니다.<br/><br/>\n                        </span>\n                    </div>\n                    <div className='Pro1Pic2'>\n                    <img src='assets/pro01_edit.png'></img>\n                        <span>나의 정보를 조회/수정할 수 있는 화면입니다.<br/><br/>\n                        정보 중 이미지와 닉네임을 수정할 수 있으며 회원탈퇴가 가능합니다.<br/><br/>\n                        </span>\n                        <span className='pageName'>edit</span>\n                    </div>\n                    <div className='Pro1Pic1'>\n                        <img src='assets/pro01_question.png'></img>\n                        <span className='pageName'>write</span>\n                        <span>질문을 작성할 수 있는 페이지입니다.<br/><br/>\n                        reactQuill 라이브러리를 이용해 구현되었습니다.<br/><br/>\n                       </span>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nexport default Clone;",{"ruleId":"100","severity":1,"message":"101","line":5,"column":12,"nodeType":"102","messageId":"103","endLine":5,"endColumn":17},{"ruleId":"100","severity":1,"message":"104","line":5,"column":19,"nodeType":"102","messageId":"103","endLine":5,"endColumn":27},{"ruleId":"100","severity":1,"message":"105","line":9,"column":10,"nodeType":"102","messageId":"103","endLine":9,"endColumn":23},{"ruleId":"100","severity":1,"message":"106","line":15,"column":9,"nodeType":"102","messageId":"103","endLine":15,"endColumn":23},{"ruleId":"100","severity":1,"message":"107","line":1,"column":30,"nodeType":"102","messageId":"103","endLine":1,"endColumn":38},{"ruleId":"108","severity":1,"message":"109","line":29,"column":25,"nodeType":"110","endLine":29,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":19,"column":25,"nodeType":"110","endLine":19,"endColumn":59},{"ruleId":"108","severity":1,"message":"109","line":27,"column":25,"nodeType":"110","endLine":27,"endColumn":61},{"ruleId":"108","severity":1,"message":"109","line":37,"column":21,"nodeType":"110","endLine":37,"endColumn":57},{"ruleId":"108","severity":1,"message":"109","line":45,"column":21,"nodeType":"110","endLine":45,"endColumn":54},{"ruleId":"108","severity":1,"message":"109","line":52,"column":25,"nodeType":"110","endLine":52,"endColumn":62},"@typescript-eslint/no-unused-vars","'index' is assigned a value but never used.","Identifier","unusedVar","'setIndex' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'onContactClick' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]